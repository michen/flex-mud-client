<?xml version="1.0" encoding="utf-8"?>
<EventMap
   xmlns:mx="http://www.adobe.com/2006/mxml"
   xmlns="http://mate.asfusion.com/"   
   >

	<mx:Script>
		<![CDATA[
			import com.simian.profile.UserModel;
			import mx.events.FlexEvent;
			import com.simian.window.MapperWindow;								
			import com.simian.telnet.TelnetEvent;			
		]]>
	</mx:Script>


	<Debugger level="{Debugger.ALL}"  /> 	

	<!-- FlexEvent.PREINITIALIZE __________________________________________________________________ -->	
	<EventHandlers type="{FlexEvent.PREINITIALIZE}">
		<ObjectBuilder generator="{MapperModel}"  />
	</EventHandlers>	
	
	<Injectors target="{MapperModel}">			
		<PropertyInjector source="{UserModel}" sourceKey="aMaps" targetKey="aMaps" />		
	</Injectors>
	
	
	
	<Injectors target="{MapperWindow}">		
		<PropertyInjector targetKey="oMapModel" source="{MapperModel}" />
	</Injectors>	
	
	<EventHandlers type="{MovementEvent.MOVE_DIRECTION}" >
		<MethodInvoker generator="{MapperModel}" method="nextMoveDirection" arguments="{event.direction}" />
	</EventHandlers>

	<EventHandlers type="{MovementEvent.MOVE_LOCATION}">
		<MethodInvoker generator="{MapperModel}" method="nextMoveLocation" arguments="{[event.x,event.y,event.z]}" />
	</EventHandlers>

	<EventHandlers type="{MovementEvent.MOVE_RELATIVE_LOCATION}">
		<MethodInvoker generator="{MapperModel}" method="nextMoveRelativeLocation" arguments="{[event.x,event.y,event.z]}" />
	</EventHandlers>

	<EventHandlers type="{MovementEvent.MOVE_TO_BOOKMARK}">
		<MethodInvoker generator="{MapperModel}" method="moveToBookmark" arguments="{event.room_name}" />
	</EventHandlers>

	<EventHandlers type="{MapperEvent.MAPPER_SELECT_ROOM}">		
		<MethodInvoker generator="{MapperModel}" method="selectRoom" arguments="{event.room}" />
	</EventHandlers>	
	
	<EventHandlers type="{MapperEvent.MAPPER_MOVE_TO_ROOM}">		
		<MethodInvoker generator="{MapperModel}" method="moveToRoom" arguments="{event.room}" />
	</EventHandlers>	
	
	<EventHandlers type="{PathEvent.NEW_PATH}">		
		<MethodInvoker generator="{MapperModel}" method="newPath" arguments="{event.aPath}" />
	</EventHandlers>	

	<EventHandlers type="{PathEvent.REPEAT_LAST_STEP}">		
		<MethodInvoker generator="{MapperModel}" method="repeatPathStep" />
	</EventHandlers>	

	<EventHandlers type="{PathEvent.STEP}">		
		<MethodInvoker generator="{MapperModel}" method="stepPath" />
	</EventHandlers>	
	
	<EventHandlers type="{PathEvent.UNDO_LAST_STEP}">		
		<MethodInvoker generator="{MapperModel}" method="undoStep" />
	</EventHandlers>		
	

	<EventHandlers type="{TelnetEvent.PARSE_LINE_DATA}">		
		<MethodInvoker generator="{MapperModel}" method="checkLine" arguments="{event.data}" />
	</EventHandlers>	

	<EventHandlers type="{TelnetEvent.PARSE_BLOCK_DATA}">
		<MethodInvoker generator="{MapperModel}" method="checkBlock" arguments="{event.data}" />
	</EventHandlers>	

</EventMap>
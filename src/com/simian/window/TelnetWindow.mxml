<?xml version="1.0" encoding="utf-8"?>
<flexlib:MDIWindow		 
	backgroundColor="0xc0c0c0"
	width="800" height="600"
	showCloseButton="false"
	xmlns:flexlib="http://code.google.com/p/flexlib/"	
	xmlns:mate="http://mate.asfusion.com/"
	xmlns:mx="http://www.adobe.com/2006/mxml"	 
	focusStart="in_command.setFocus();"
	click="in_command.setFocus();"	
	name="telnetWindow"
	styleName="noPadding"		
>


  <mx:Script>
  <![CDATA[

  	import mx.collections.ArrayCollection;
  	import com.simian.window.WindowEvent;
  	import flexlib.mdi.managers.MDIManager;

  	import com.simian.telnet.*;
  	
	

	[Bindable]
	public var telnetSettings : TelnetSettings;


	// a sent command stack (so we can use up/down to move through previous sent things)
	private var aCommands : ArrayCollection = new ArrayCollection();
	private var currentCommandIndex  : int = -1;	

	
	private function resetTerminal() : void{
		
		ansiTextControl.resetTextArea();
	}

	
	// send command to telnet
	private function processCommand() : void {
		
		
		// send command event
		var telnetEvent : TelnetEvent = new TelnetEvent(TelnetEvent.SEND_DATA);
		telnetEvent.data = in_command.text;			
		dispatchEvent(telnetEvent);		
		
			
		// add this command to the history
		currentCommandIndex = aCommands.length;
		addCommand(in_command.text);
		
		selectCommandText();
		
	}
	

	private function selectCommandText() : void {
		// select the current text so it will be overwritten
		in_command.selectionBeginIndex = 0;
		in_command.selectionEndIndex = in_command.text.length;		
	}

	private function commandUp() : void {			
		if ( currentCommandIndex > 0){
			currentCommandIndex--;
			in_command.text = aCommands.getItemAt(currentCommandIndex) as String;	
			selectCommandText();					
		} else { 
			if (currentCommandIndex == 0)currentCommandIndex--;
			in_command.text = '';
		} 	
	}

	private function commandDown() : void {				
		if ( currentCommandIndex == aCommands.length - 1){
			in_command.text = '';
			currentCommandIndex++;
		} 		
		if ( currentCommandIndex < (aCommands.length - 1)){			
			currentCommandIndex++;
			in_command.text = aCommands.getItemAt(currentCommandIndex) as String;
			selectCommandText();						
		}		
		
	}

	private function addCommand(cmd : String) : void {		
		if(aCommands.length >= telnetSettings.maxCommands) aCommands.removeItemAt(0);		
		aCommands.addItem(cmd);		
	}

	private function inputKeypress(event:KeyboardEvent) : void {
		
		if (event.keyCode == 38) commandUp();
		if (event.keyCode == 40) commandDown();
		
		if (event.keyCode == 33) ansiTextControl.pageUp();
		if (event.keyCode == 34) ansiTextControl.pageDown();
		
		if (event.keyCode == 13) processCommand();
		
		// trace(event.keyCode);
		
		// reset screen position if they are scrolling and hit a key other than page up / page down	
		if (ansiTextControl.bScrollingMode && event.keyCode != 33 && event.keyCode != 3) ansiTextControl.resetScrolling();
		
	}
  
  ]]>  
  </mx:Script>

	
	<mate:Listener type="{TelnetEvent.NEW_LINE_DATA}" 		receive="ansiTextControl.addRow(event.data)" />	
	<mate:Listener type="{TelnetEvent.APPEND_LINE_DATA}"	receive="ansiTextControl.updateLastRow(event.data)" />	
	
	<mate:Listener type="{TelnetEvent.RESET_TERMINAL}" 		receive="resetTerminal()" />	
	
	
	<mx:VBox width="100%" height="100%"  verticalGap="2" paddingTop="2">		    
	
	  	<ansi:AnsiTextArea
	  		xmlns:ansi="com.simian.ansiTextArea.*"
	  		width = "100%"
	  		height = "100%"
	  		id="ansiTextControl"	  		
	  		backgroundColor = "{telnetSettings.defaultBGcolour}"
	  		maxScrollback = "{telnetSettings.maxScrollBack}"
	  		
	  		acColoursLight = "{telnetSettings.acColoursLight}"		
	  		acColoursDark = "{telnetSettings.acColoursDark}"
	  		  		
	  		defaultFGcolour = "{telnetSettings.defaultFGcolour}" 
	  		defaultBGcolour = "{telnetSettings.defaultBGcolour}"	  		  	
	  	/>
	  	
		
		<mx:TextInput id="in_command" width="100%" keyDown="inputKeypress(event);" />			
		
		
	</mx:VBox>
				
</flexlib:MDIWindow>
